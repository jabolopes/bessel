Namespace do not export module, only toplevel functions: bug or feature?


Functions cannot be redefined in interactive.


Add type annotations like so?

  def f = x:Int (negInt x)

  def f = x:a (negInt x) -- polymorphic type


Remove '@' in empty list pattern.


Comments are broken.


Typecheck 'CondStx'.


Introduce and typecheck fixpoints


Remove the benign shift/reduce conflicts.


Move code in 'Macros' to 'Renamer' in order to use 'genNameM'.


Replace the parser with a monadic parser that handles errors and
warnings conveniently.  And that also keeps track of lines, again for
improving error messages.


Finish the work on 'eq' and 'lt'.  Eliminate 'exprEq' in 'Core'
because it is not elegant.  Should do the same for 'less'.


Fix the pretty printer to print to 'String'.  Perhaps the pretty
printer and 'showAbbrev' can be combined in a single monad.


Add inductive and coinductive types :)


Infer types from predicates, i.e., eliminate the following casts

  def f x@isInt y@isInt = addInt (toInt x) (toInt y)


Typechecker crashes when functions are applied with the wrong number
of arguments.
