Base types should be looked up in the environment instead of being
hardcoded in the parser.


Unroll lambdas (anonymous functions) in 'Renamer'.


Namespaces do not export modules, only toplevel functions: bug or
feature?


Functions cannot be redefined in interactive.


Add type annotations like so?

  def f = x:Int (negInt x)

  def f = x:a (negInt x) -- polymorphic type


Remove '@' in empty list pattern.


Comments are broken.


Typecheck 'CondStx'.


Introduce and typecheck fixpoints


Remove the benign shift/reduce conflicts.


Move code in 'Macros' to 'Renamer' in order to take advantage of
'genNameM'.


Add lines in semantic errors.


Fix 'lt' the same way 'eq' was fixed. Find a solution for 'eq' for
user defined datatypes.


Fix mutually recursive functions.


Fix the pretty printer to print to 'String'.  Perhaps the pretty
printer and 'showAbbrev' can be combined in a single monad.


Add inductive and coinductive types :)


Infer types from predicates, i.e., eliminate the following casts

  def f x@isInt y@isInt = addInt (toInt x) (toInt y)


Typechecker crashes when functions are applied with the wrong number
of arguments.
