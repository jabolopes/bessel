let nonrec f0 :: Int -> Int =
  \n1 :: Int ->
    let nonrec res#02 :: List Int =
      check#
        (isList#
           (cons (\_#13 :: Int -> true#)
              (cons (\_#24 :: Int -> true#) null#)))
        (cons 1 (cons 2 null#)) in
    let nonrec x5 :: Int = head# res#02 in
    let nonrec y6 :: Int = head# (tail# res#02) in
    case n1
      (\arg#37 :: Int ->
         cond
           > 1 arg#37 -> x5
           true# -> y6)