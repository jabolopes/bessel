let nonrec isFruit0 :: Fruit -> Bool = isType# "Fruit"
let nonrec isApple1 =
  \arg#02 -> cond isFruit0 arg#02 -> isVariant0# "Fruit" 0 arg#02
let nonrec isBanana3 =
  \fn#14 ->
    \arg#25 ->
      cond isFruit0 arg#25 -> isVariant# "Fruit" 1 fn#14 arg#25
let nonrec isFig6 =
  \fn#37 ->
    \arg#48 ->
      cond isFruit0 arg#48 -> isVariant# "Fruit" 2 fn#37 arg#48
let nonrec isOrange9 =
  \fn#510 ->
    \arg#611 ->
      cond isFruit0 arg#611 -> isVariant# "Fruit" 3 fn#510 arg#611
let nonrec isLemon12 =
  \fn#713 ->
    \arg#814 ->
      cond isFruit0 arg#814 -> isVariant# "Fruit" 4 fn#713 arg#814
let nonrec isMelon15 =
  \fn#916 ->
    \arg#1017 ->
      cond isFruit0 arg#1017 -> isVariant# "Fruit" 5 fn#916 arg#1017
let nonrec lambda#30 = \r#1119 -> cond isFruit0 r#1119 -> r#1119
let nonrec mkApple18 = lambda#30 (mkVariant0# "Fruit" 0)
let nonrec lambda#31 = \r#1222 -> cond isFruit0 r#1222 -> r#1222
let nonrec mkBanana20 =
  \x21 -> cond isInt# x21 -> lambda#31 (mkVariant# "Fruit" 1 x21)
let nonrec lambda#32 = \r#1425 -> cond isFruit0 r#1425 -> r#1425
let nonrec mkFig23 =
  \arg#1324 ->
    cond
      isTuple2 (mkTuple2 isInt# isReal#) arg#1324 ->
        lambda#32 (mkVariant# "Fruit" 2 arg#1324)
let nonrec lambda#33 = \r#1628 -> cond isFruit0 r#1628 -> r#1628
let nonrec mkOrange26 =
  \arg#1527 ->
    cond isFruit0 arg#1527 -> lambda#33 (mkVariant# "Fruit" 3 arg#1527)
let nonrec lambda#34 = \r#1831 -> cond isFruit0 r#1831 -> r#1831
let nonrec mkLemon29 =
  \arg#1730 ->
    cond
      isOrange9 isFruit0 arg#1730 ->
        lambda#34 (mkVariant# "Fruit" 4 arg#1730)
let nonrec lambda#35 = \r#2034 -> cond isFruit0 r#2034 -> r#2034
let nonrec mkMelon32 =
  \arg#1933 ->
    cond isFruit0 arg#1933 -> lambda#35 (mkVariant# "Fruit" 5 arg#1933)
let nonrec lambda#36 = \x37 -> cond isInt# x37 -> x37
let nonrec unBanana35 =
  \arg#2136 ->
    cond isFruit0 arg#2136 -> lambda#36 (unVariant# arg#2136)
let nonrec lambda#37 =
  \r#2340 -> cond isTuple2 (mkTuple2 isInt# isReal#) r#2340 -> r#2340
let nonrec unFig38 =
  \arg#2239 ->
    cond isFruit0 arg#2239 -> lambda#37 (unVariant# arg#2239)
let nonrec lambda#38 = \r#2543 -> cond isFruit0 r#2543 -> r#2543
let nonrec unOrange41 =
  \arg#2442 ->
    cond isFruit0 arg#2442 -> lambda#38 (unVariant# arg#2442)
let nonrec lambda#39 =
  \r#2746 -> cond isOrange9 isFruit0 r#2746 -> r#2746
let nonrec unLemon44 =
  \arg#2645 ->
    cond isFruit0 arg#2645 -> lambda#39 (unVariant# arg#2645)
let nonrec lambda#40 = \r#2949 -> cond isFruit0 r#2949 -> r#2949
let nonrec unMelon47 =
  \arg#2848 ->
    cond isFruit0 arg#2848 -> lambda#40 (unVariant# arg#2848)
let nonrec f150 =
  \a51 ->
    cond
      isApple1 a51 -> 0
      isBanana3 isInt# a51 ->
        let nonrec x52 = unBanana35 a51 in
        1
      isFig6 (isTuple2 (mkTuple2 isInt# isReal#)) a51 ->
        let nonrec x53 = tuple2Ref0# (unFig38 a51) in
        let nonrec y54 = tuple2Ref1# (unFig38 a51) in
        2
      isOrange9 isFruit0 a51 ->
        let nonrec x55 = unOrange41 a51 in
        3
      isLemon12 (isOrange9 isFruit0) a51 ->
        let nonrec x56 = unOrange41 (unLemon44 a51) in
        4
      isMelon15 isFruit0 a51 ->
        let nonrec x57 = unMelon47 a51 in
        5