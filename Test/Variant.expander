let nonrec isFruit :: Fruit -> Bool = isType# "Fruit"
let nonrec isApple =
  \arg#0 -> cond isFruit arg#0 -> isVariant0# "Fruit" 0 arg#0
let nonrec isBanana =
  \fn#1 ->
    \arg#2 -> cond isFruit arg#2 -> isVariant# "Fruit" 1 fn#1 arg#2
let nonrec isFig =
  \fn#3 ->
    \arg#4 -> cond isFruit arg#4 -> isVariant# "Fruit" 2 fn#3 arg#4
let nonrec isOrange =
  \fn#5 ->
    \arg#6 -> cond isFruit arg#6 -> isVariant# "Fruit" 3 fn#5 arg#6
let nonrec isMelon =
  \fn#7 ->
    \arg#8 -> cond isFruit arg#8 -> isVariant# "Fruit" 4 fn#7 arg#8
let nonrec mkApple =
  (\r#9 -> cond isFruit r#9 -> r#9) (mkVariant0# "Fruit" 0)
let nonrec mkBanana =
  \x ->
    cond
      isInt x ->
        (\r#10 -> cond isFruit r#10 -> r#10) (mkVariant# "Fruit" 1 x)
let nonrec mkFig =
  \arg#11 ->
    cond
      isTuple2 (mkTuple2 isInt isReal) arg#11 ->
        (\r#12 -> cond isFruit r#12 -> r#12) (mkVariant# "Fruit" 2 arg#11)
let nonrec mkOrange =
  \arg#13 ->
    cond
      isFruit arg#13 ->
        (\r#14 -> cond isFruit r#14 -> r#14) (mkVariant# "Fruit" 3 arg#13)
let nonrec mkMelon =
  \arg#15 ->
    cond
      isFruit arg#15 ->
        (\r#16 -> cond isFruit r#16 -> r#16) (mkVariant# "Fruit" 4 arg#15)
let nonrec unBanana =
  \arg#17 ->
    cond
      isFruit arg#17 -> (\x -> cond isInt x -> x) (unVariant# arg#17)
let nonrec unFig =
  \arg#18 ->
    cond
      isFruit arg#18 ->
        (\r#19 -> cond isTuple2 (mkTuple2 isInt isReal) r#19 -> r#19)
          (unVariant# arg#18)
let nonrec unOrange =
  \arg#20 ->
    cond
      isFruit arg#20 ->
        (\r#21 -> cond isFruit r#21 -> r#21) (unVariant# arg#20)
let nonrec unMelon =
  \arg#22 ->
    cond
      isFruit arg#22 ->
        (\r#23 -> cond isFruit r#23 -> r#23) (unVariant# arg#22)
let nonrec f1 =
  \a ->
    cond
      isApple a -> 0
      isBanana isInt a ->
        let nonrec x = unBanana a in
        1
      isFig (isTuple2 (mkTuple2 isInt isReal)) a ->
        let nonrec x = tuple2Ref0# (unFig a) in
        let nonrec y = tuple2Ref1# (unFig a) in
        2
      isOrange isFruit a ->
        let nonrec x = unOrange a in
        3
      isMelon isFruit a ->
        let nonrec x = unMelon a in
        4